---
import { Image } from "astro:assets";

import arrow from "../../assets/icons/arrow_left_alt.svg";

const { headerTitle } = Astro.props;
---

<header id="header" class="hidden">
    <a id="a">
        <button>
            <Image src={arrow} height="22" loading="eager" alt="back" />
        </button>
    </a>
    {headerTitle && <span id="headerTitle">{headerTitle}</span>}
</header>

<style>
    header {
        align-items: center;
        color: var(--color-neutral-1);
        display: flex;
        font: 600 16px var(--font-serif);
        left: 50%;
        max-width: var(--max-width);
        position: fixed;
        transform: translateX(-50%);
        width: 100%;

        &::before {
            backdrop-filter: blur(2px);
            background-color: var(--color-header);
            content: "";
            height: 100%;
            position: absolute;
            width: 100%;
            z-index: -1;
        }

        &.hidden {
            display: none;
        }
    }

    button {
        background-color: transparent;
        border: none;
        cursor: pointer;
        font-size: 0;
        padding: 10px;
        transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);

        &:focus-visible,
        &:hover {
            background-color: var(--color-button);
        }

        &:active {
            border-radius: 75%;
            transform: scale(0.95);
        }
    }

    span {
        opacity: 0;
        text-align: center;
        transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
        width: calc(100% - 2 * 42px); /* 42px is the width of the a */

        &.show {
            opacity: 1;
        }
    }
</style>

<script>
    document.addEventListener('astro:page-load', () => {
        const header = document.getElementById('header') as HTMLElement;
        const a = document.getElementById('a') as HTMLAnchorElement;
        const headerTitle = document.getElementById('headerTitle') as HTMLSpanElement;
        const h1 = document.querySelector('h1') as HTMLHeadingElement;
        const currentPath = window.location.pathname;
        const parentPath = currentPath.split('/').slice(0, -1).join('/') || '/';

        if (currentPath !== '/') {
            header.classList.remove('hidden');
            a.href = parentPath;

            if (h1) {
                function handleScroll() {
                    const h1Bottom = h1.getBoundingClientRect().bottom;

                    if (h1Bottom < 0) {
                        headerTitle.classList.add('show');
                    } else {
                        headerTitle.classList.remove('show');
                    }
                }

                window.addEventListener('scroll', handleScroll);
                handleScroll();
            }
        }
    });
</script>
