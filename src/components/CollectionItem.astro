---
import type { CollectionEntry, CollectionKey } from "astro:content";
import { formatContentDate } from "@utils/time";

interface Props {
  article: CollectionEntry<CollectionKey>;
}
const { article } = Astro.props;

const frontmatter = article.data;
---

<a href={`/articles/${article.id}`}>
  <p>{frontmatter.title}</p>
  <span aria-hidden="true"></span>
  <time datetime={frontmatter.pubDate.toISOString()}
    >{formatContentDate(frontmatter.pubDate, true)}</time
  >
</a>

<style>
  a {
    padding: 0.6em 0.75em 0.55em;
    display: flex;
    align-items: center;
    gap: 0.5em;
    border-radius: var(--border-radius-medium);
    line-height: 1.2;
    transition: all var(--transition-duration) var(--transition-timing-function);

    &:focus-visible,
    &:hover {
      background-color: var(--color-bg-light);
    }

    &:active {
      transform: scale(0.98);
    }
  }

  p {
    margin: 0;
    flex: 0 1 auto;
    white-space: normal;
  }

  span {
    height: 0;
    flex: 1 1 auto;
    border: 1px dashed var(--color-border-muted);
  }

  time {
    flex: 0 0 auto;
    color: var(--color-text-muted);
    word-spacing: -0.15em;
    white-space: nowrap;
  }

  @media (max-width: 768px) {
    /* --max-width: 768px */
    time {
      font-size: 0.8em;
      word-spacing: -0.2em;
    }
  }
</style>
