---
import type { HTMLAttributes, HTMLTag } from "astro/types";

type Props = HTMLAttributes<HTMLTag>;
const { ...props } = Astro.props;
---

<search {...props}>
  <input id="search-input" type="search" />
  <output id="search-output" for="search-input"></output>
</search>

<style>
  search {
    translate: 0 50%;
  }
</style>

<script is:inline async>
  const searchInput = document.getElementById("search-input");
  const searchOutput = document.getElementById("search-output");
  let pagefind;

  const initPagefind = async () => {
    if (pagefind) return;
    pagefind = await import("/pagefind/pagefind.js");
    pagefind.init();
  };

  searchInput.addEventListener("focus", initPagefind);

  searchInput.addEventListener("input", async (event) => {
    await initPagefind();

    const searchTerm = event.target.value;
    if (!searchTerm) {
      searchOutput.innerHTML = "";
      return;
    }

    const modifiedTerm = `"${searchTerm.split("").join(" ")}"`;
    const search = await pagefind.search(modifiedTerm);
    const results = await Promise.all(search.results.map((r) => r.data()));

    if (!results.length) {
      searchOutput.innerHTML = "";
      return;
    }

    const listItems = results
      .map((data) => `<li>${data.excerpt}</li>`)
      .join("");

    searchOutput.innerHTML = `<ul>${listItems}</ul>`;
  });
</script>
