---
import BaseLayout from "@layouts/BaseLayout.astro";
import CollectionItem from "@components/CollectionItem.astro";
import { filterAndSortArticlesByCategories } from "@utils/collection";

interface Props {
  title: string;
  description: string;
  categories: string | string[];
}
const { title, description, categories } = Astro.props;

const articles = await filterAndSortArticlesByCategories(categories);
---

<BaseLayout title={title} description={description}>
  <h1>{title}</h1>
  <slot />
  <p>
    <span>共 {articles.length} 篇</span>
  </p>
  <ul class="article-items">
    {
      articles.map((article) => (
        <li>
          <CollectionItem article={article} />
        </li>
      ))
    }
  </ul>
</BaseLayout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0.5;
    }
    to {
      opacity: 1;
    }
  }

  p {
    display: flex;
    justify-content: flex-end;
    margin-block: 0;
    padding: 0 calc(18px * 0.75); /* 18px、0.75em 分別是 ArticleItem 的 font-size、margin-inline。 */
    color: var(--neutral-400);
    font-size: 16px;
    font-weight: 500;

    &:has(.annotation) {
      justify-content: space-between;
    }
  }

  @media (max-width: 768px) {
    /* --max-width: 768px */
    p {
      margin-block-start: 1em;
    }
  }

  ul {
    padding-left: 0;
    list-style: none;
  }

  li {
    opacity: 0.5;
    transition: opacity var(--transition-duration);
    will-change: opacity;

    &.visible {
      animation: fadeInUp var(--transition-duration) linear both;
    }
  }

  /* li {
        animation: fadeInUp 300ms linear both;
        animation-range: entry 100% cover 10%;
        animation-timeline: view();
        will-change: opacity;
    } */
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        entry.target.classList.toggle("visible", entry.isIntersecting);
      });
    },
    { rootMargin: "0px 0px 21px 0px", threshold: 0.1 },
  );

  document
    .querySelectorAll("ul.article-items li")
    .forEach((item) => observer.observe(item));
</script>
