---
import {
    type CollectionEntry,
    type CollectionKey,
    getCollection,
    getEntry,
    render,
} from "astro:content";
import ArticleLayout from "../../../layouts/ArticleLayout.astro";

const collection: CollectionKey = "ContactAndCommunicationBookDiaries";
const collectionName: string = "聯絡簿日記";
const titlePubDate: boolean = true;

const { id } = Astro.params;
if (id === undefined) {
    return Astro.redirect("/404");
}

const entry = await getEntry(collection, id);
if (entry === undefined) {
    return Astro.redirect("/404");
}

const allArticles: CollectionEntry<CollectionKey>[] =
    await getCollection(collection);
const sortedArticles: CollectionEntry<CollectionKey>[] = allArticles.sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
);
const currentIndex = sortedArticles.findIndex((article) => article.id === id);
const prevArticle: CollectionEntry<CollectionKey> | null =
    currentIndex < sortedArticles.length - 1
        ? sortedArticles[currentIndex + 1]
        : null;
const nextArticle: CollectionEntry<CollectionKey> | null =
    currentIndex > 0 ? sortedArticles[currentIndex - 1] : null;

const { Content } = await render(entry);
---

<ArticleLayout
    collectionName={collectionName}
    frontmatter={entry.data}
    titlePubDate={titlePubDate}
    prevArticle={prevArticle}
    nextArticle={nextArticle}
>
    <Content />
</ArticleLayout>
