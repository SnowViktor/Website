---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="字數計算" description="【即時計算文字數量】：單詞｜字符｜輸入">
    <h1>字數計算</h1>
    <div id="count-result">
        <div class="group">
            <p class="item">單詞</p>
            <p id="word-count">0</p>
        </div>
        <hr class="divider" />
        <div class="group">
            <p class="item">字符</p>
            <p id="character-count">0</p>
        </div>
    </div>
    <textarea id="text-input" rows="12" placeholder="請輸入文字" />
</BaseLayout>

<style>
    #count-result {
        background-color: #6a9c89;
        border-radius: 15px;
        display: flex;
        margin-bottom: 2.63%;

        .group {
            align-items: center;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            padding: 10px 15px;

            
            p {
                font-size: 1.5em;
                margin: 0;
            }

            .item {
                font-size: 1em;
                margin-bottom: 12.5%;
            }
        }

        .divider {
            border: 1px solid #c1d8c3;
            margin: 0;
	        width: 0px;
        }
    }

    #text-input {
        background-color: #ffffff;
        border: 1px solid #c1d8c3;
        border-radius: 15px;
        box-shadow: 0 0 2px 1px #c1d8c380;
        font-size: 0.9em;
        outline: none;
        padding: 12px;
        resize: vertical;
        width: calc(100% - 24px);

        &:focus-visible,
        &:hover {
            box-shadow: 0 0 4px 2px #c1d8c380;
        }
    }
</style>

<script is:inline>
    document.addEventListener("astro:page-load", () => {
        const wordCount = document.getElementById("word-count");
        const characterCount = document.getElementById("character-count");
        const textInput = document.getElementById("text-input");
    
        const cjkRegex = /[\u4E00-\u9FFF\u3040-\u30FF\uAC00-\uD7AF]/g;
        const emojiRegex = /\p{Extended_Pictographic}/gu;
        const nonWordRegex = /[^\w\s]|_/g;
        const multiSpaceRegex = /\s+/g;
    
        textInput.addEventListener("input", () => {
            const text = textInput.value;
            const counts = calculateCounts(text);
            wordCount.textContent = counts.words.toString();
            characterCount.textContent = counts.characters.toString();
        });
    
        function calculateCounts(text) {
            const cjkChars = text.match(cjkRegex) || [];
            const emojis = text.match(emojiRegex) || [];
      
            const nonCJKText = text.replace(cjkRegex, " ");
            const noEmojiText = nonCJKText.replace(emojiRegex, " ");
            const cleanedText = noEmojiText.replace(nonWordRegex, "").replace(multiSpaceRegex, " ").trim();
            const nonCJKWords = cleanedText ? cleanedText.split(" ") : [];
      
            let charCount = 0;
            const graphemes = new Intl.Segmenter().segment(text);
            for (const _ of graphemes) {
                charCount++;
            }
      
            return {
                words: cjkChars.length + nonCJKWords.length + emojis.length,
                characters: charCount,
            };
        }
    });
</script>
