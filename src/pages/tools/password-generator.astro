---
import Layout from "../../layouts/PageLayout.astro";
---

<Layout title="密碼產生" description="【隨機產生安全的 ASCII 密碼】：減少 | 輸入 | 增加 | 刷新 | 複製 | 輸出">
    <div id="user">
        <div id="left">
            <img id="remove" alt="減少" src="/icons/remove.svg" />
            <input id="number" type="number" min="0" max="10000" placeholder="0" />
            <img id="add" alt="增加" src="/icons/add.svg" />
        </div>
        <img id="refresh" alt="刷新" src="/icons/refresh.svg" />
        <div id="right">
            <img id="copy" alt="複製" src="/icons/copy.svg" />
            <p id="copy-alert">已複製！</p>
        </div>
    </div>
    <textarea id="password" rows="1" readonly></textarea>
</Layout>

<style>
    #user {
        align-items: center;
        display: flex;
        justify-content: space-evenly;
        margin: 0 25% 0 25%;
    }

    @media screen and (max-width: 600px) {
        #user {
            margin: 0 10% 0 10%;
        }
    }

    #left {
        align-items: center;
        display: flex;
        justify-content: space-between;
        width: 160px;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }

    input {
        background-color: #2c2c2c;
        border: 1px solid orangered;
        border-radius: 10px;
        color: white;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        font-size: 21px;
        height: 36px;
        margin: 1.216px;
        outline: none;
        padding: 0;
        text-align: center;
        width: 72px;
    }

    input:focus,
    input:hover {
        background-color: #333333;
        border: 2px solid hsl(16, 100%, 55%);
        margin: 0.431px;
    }

    img {
        background-color: #202124;
        border-radius: 100%;
        cursor: pointer;
        transition: all 100ms ease-in-out;
    }

    img:active,
    img:focus,
    img:hover {
        background-color: #333333;
        transform: scale(1.3);
    }

    #right {
        display: inline-block;
        position: relative;
    }

    #copy-alert {
        background-color: #333333;
        border-radius: 10px;
        font-size: 16px;
        left: 90%;
        opacity: 0;
        padding: 5px;
        position: absolute;
        text-align: center;
        text-wrap: nowrap;
        top: -115%;
        transition: opacity 0.25s;
    }

    #copy-alert.visible {
        opacity: 1;
    }

    #password {
        background-color: #2c2c2c;
        border: 1px solid orangered;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(255, 69, 0, 0.3);
        color: white;
        font-family: 'Noto Sans TC', sans-serif;
        font-size: 20px;
        font-style: normal;
        font-weight: 500;
        margin-top: 25px;
        overflow: scroll;
        padding: 12px 10px 0 10px;
        resize: none;
        white-space: nowrap;
        width: calc(100% - 20px);
    }

    #password:focus,
    #password:hover {
        background-color: #333333;
        border-color: orangered;
        box-shadow: 0 0 8px rgba(255, 69, 0, 0.5);
        outline: none;
    }
</style>

<script>
    const removeNumber = document.getElementById('remove') as HTMLImageElement;
    const inputNumuber = document.getElementById('number') as HTMLInputElement;
    const addNumber = document.getElementById('add') as HTMLImageElement;
    const refreshPassword = document.getElementById('refresh') as HTMLImageElement;
    const copyPassword = document.getElementById('copy') as HTMLImageElement;
    const copyAlert = document.getElementById('copy-alert');
    const generatePassword = document.getElementById('password') as HTMLTextAreaElement;
    let number = 0, timeout: NodeJS.Timeout, interval: NodeJS.Timeout, alert: NodeJS.Timeout;
    inputNumuber.addEventListener('input', () => {
        if (Number(inputNumuber.value) < 0) {
            number = 0; inputNumuber.value = '0';
        } else if (Number(inputNumuber.value) > 10000) {
            number = 10000; inputNumuber.value = '10000';
        }
        number = Number(inputNumuber.value);
        generator();
    });
    removeNumber.onclick = remove;
    removeNumber.onmouseenter = () => {
        removeNumber.onmousedown = () => {
            timeout = setTimeout(() => {interval = setInterval(remove, 100);}, 200);
        };
        removeNumber.onmouseup = () => {clearInterval(interval); clearTimeout(timeout);};
    };
    removeNumber.onmouseleave = () => {clearInterval(interval); clearTimeout(timeout);};
    addNumber.onclick = add;
    addNumber.onmouseenter = () => {
        addNumber.onmousedown = () => {
            timeout = setTimeout(() => {interval = setInterval(add, 100);}, 200);
        };
        addNumber.onmouseup = () => {clearInterval(interval); clearTimeout(timeout);};
    };
    addNumber.onmouseleave = () => {clearInterval(interval); clearTimeout(timeout);};
    refreshPassword.addEventListener('click', generator);
    copyPassword.addEventListener('click', () => {
        navigator.clipboard.writeText(generatePassword.value);
        copyAlert!.classList.add('visible');
        alert = setTimeout(() => {clearTimeout(alert); copyAlert!.classList.remove('visible');}, 1500);
    });
    function remove() {
        if (Number(inputNumuber.value) <= 0) {
            number = 0; inputNumuber.value = '0';
        } else {
            number -= 1; inputNumuber.value = String(Number(inputNumuber.value) - 1);
        }
        generator();
    }
    function add() {
        if (Number(inputNumuber.value) < 10000) {
            number += 1; inputNumuber.value = String(Number(inputNumuber.value) + 1);
        }
        generator();
    }
    function generator() {generatePassword.value = randomGenerator(number);}
    function randomGenerator(length: number) {
        if (length < 95) {
            return randomCharacters(length);
        } else {
            let integer = '';
            for (let i = 0; i < Math.trunc(length / 95); i++) {integer += randomCharacters(95);} 
            return integer + randomCharacters(length % 95);
        }
    }
    function randomCharacters(sliceEnd: number) {
        return Array.from(' !\'"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~').sort(() => 0.5 - Math.random()).slice(0, sliceEnd).join('');
    }
</script>