---
import PageLayout from "../../layouts/PageLayout.astro";

import remove from "../../assets/remove.svg";
import add from "../../assets/add.svg";
import refresh from "../../assets/refresh.svg";
import copy from "../../assets/copy.svg";
---

<PageLayout title="密碼產生" description="【隨機產生安全的 ASCII 密碼】：減少 | 輸入 | 增加 | 刷新 | 複製 | 密碼">
    <div id="function">
        <div id="number">
            <img src={remove.src} alt="減少" id="number-remove" tabindex="0" draggable="false" />
            <input id="number-input" aria-label="輸入" type="number" min="0" max="10000" placeholder="0" />
            <img src={add.src} alt="增加" id="number-add" tabindex="0" draggable="false" />
        </div>
        <img src={refresh.src} alt="刷新" id="password-refresh" tabindex="0" draggable="false" />
        <div id="copy">
            <img src={copy.src} alt="複製" id="password-copy" tabindex="0" draggable="false" />
            <p id="copy-alert">已複製</p>
        </div>
    </div>
    <textarea id="password-output" aria-label="密碼" rows="1" readonly></textarea>
</PageLayout>

<style>
    #function {
        align-items: center;
        display: flex;
        justify-content: space-evenly;
        margin-inline: 25%;

        #number {
            align-items: center;
            display: flex;
            justify-content: space-between;
            width: 160px;

            #number-input {
                background-color: rgb(255, 255, 255);
                border: 1px solid rgb(193, 216, 195);
                border-radius: 15px;
                font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande", "Lucida Sans", serif;
                font-size: 1em;
                height: 38.44px;
                outline: none;
                padding: 0;
                text-align: center;
                width: 42.5%;

                &:focus-visible,
                &:hover {
                    border: 2px solid rgb(193, 216, 195);
                    margin: 0.431px;
                }

                &::-webkit-outer-spin-button,
                &::-webkit-inner-spin-button {
                    -webkit-appearance: none;
                }

                &[type=number] {
                    -moz-appearance: textfield;
                }
            }
        }

        img {
            background-color: rgb(242, 209, 168);
            border-radius: 100%;
            cursor: pointer;
            transition: all 100ms ease-in-out;

            &:focus-visible,
            &:hover {
                transform: scale(1.3);
            }
        }

        #copy {
            position: relative;
            top: 3px;

            #copy-alert {
                background-color: rgb(106, 156, 137);
                border-radius: 10px;
                font-size: 0.8em;
                left: 90%;
                opacity: 0;
                padding: 2px 5px;
                position: absolute;
                text-align: center;
                text-wrap: nowrap;
                top: -100%;
                transition: opacity 0.25s;

                &.visible {
                    opacity: 1;
                }
            }
        }
    }

    @media screen and (max-width: 500px) {
        #function {
            margin-inline: 10%;
        }
    }

    #password-output {
        background-color: rgb(255, 255, 255);
        border: 1px solid rgb(193, 216, 195);
        border-radius: 15px;
        box-shadow: 0 0 2px 1px rgba(193, 216, 195, 0.5);
        font-family: "Noto Sans TC", sans-serif;
        font-size: 1em;
        margin-top: 4%;
        overflow: scroll;
        padding: 12px 12px 0;
        resize: none;
        white-space: nowrap;
        width: calc(100% - 24px);

        &:focus-visible,
        &:hover {
            box-shadow: 0 0 4px 2px #c1d8c380;
            outline: none;
        }
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const numberRemove = document.getElementById("number-remove") as HTMLImageElement;
        const numberInput = document.getElementById("number-input") as HTMLInputElement;
        const numberAdd = document.getElementById("number-add") as HTMLImageElement;
        const passwordRefresh = document.getElementById("password-refresh") as HTMLImageElement;
        const passwordCopy = document.getElementById("password-copy") as HTMLImageElement;
        const copyAlert = document.getElementById("copy-alert");
        const passwordOutput = document.getElementById("password-output") as HTMLTextAreaElement;
        let number = 0, timeout: NodeJS.Timeout, interval: NodeJS.Timeout, alert: NodeJS.Timeout;

        numberInput.addEventListener("input", () => {
            if (Number(numberInput.value) < 0) {
                numberInput.value = "0";
            } else if (Number(numberInput.value) > 10000) {
                numberInput.value = "10000";
            }
            number = Number(numberInput.value);
            generatePassword();
        });

        function removeNumber() {
            if (Number(numberInput.value) <= 0) {
                number = 0; numberInput.value = "0";
            } else {
                number -= 1; numberInput.value = String(Number(numberInput.value) - 1);
            }
            generatePassword();
        }

        numberRemove.onclick = removeNumber;
        numberRemove.onfocus = () => {numberRemove.onkeydown = removeNumber;};
        numberRemove.onmouseenter = () => {
            numberRemove.onmousedown = () => {timeout = setTimeout(() => {interval = setInterval(removeNumber, 75);}, 200);};
            numberRemove.onmouseup = () => {clearInterval(interval); clearTimeout(timeout);};
        };
        numberRemove.onmouseleave = () => {clearInterval(interval); clearTimeout(timeout);};

        function addNumber() {
            if (Number(numberInput.value) < 10000) {
                number += 1; numberInput.value = String(Number(numberInput.value) + 1);
            }
            generatePassword();
        }

        numberAdd.onclick = addNumber;
        numberAdd.onfocus = () => {numberAdd.onkeydown = addNumber;};
        numberAdd.onmouseenter = () => {
            numberAdd.onmousedown = () => {timeout = setTimeout(() => {interval = setInterval(addNumber, 75);}, 200);};
            numberAdd.onmouseup = () => {clearInterval(interval); clearTimeout(timeout);};
        };
        numberAdd.onmouseleave = () => {clearInterval(interval); clearTimeout(timeout);};

        passwordRefresh.onclick = generatePassword;
        passwordRefresh.onfocus = () => {passwordRefresh.onkeydown = generatePassword;};

        function copyPassword() {
            navigator.clipboard.writeText(passwordOutput.value);
            copyAlert!.classList.add("visible");
            alert = setTimeout(() => {clearTimeout(alert); copyAlert!.classList.remove("visible");}, 1500);
        }

        passwordCopy.onclick = copyPassword;
        passwordCopy.onfocus = () => {passwordCopy.onkeydown = copyPassword;};

        function generatePassword() {passwordOutput.value = classifyLength(number);}

        function classifyLength(length: number) {
            if (length < 95) {
                return generateRandom(length);
            } else {
                let integer = "";
                for (let i = 0; i < Math.trunc(length / 95); i++) {integer += generateRandom(95);} 
                return integer + generateRandom(length % 95);
            }
        }

        function generateRandom(sliceEnd: number) {
            return Array
              .from(" !\"'#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~")
              .sort(() => 0.5 - Math.random())
              .slice(0, sliceEnd)
              .join("");
        }
    });
</script>