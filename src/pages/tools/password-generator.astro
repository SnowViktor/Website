---
import PageLayout from "../../layouts/PageLayout.astro";

import remove from "../../assets/remove.svg";
import add from "../../assets/add.svg";
import refresh from "../../assets/refresh.svg";
import copy from "../../assets/copy.svg";
---

<PageLayout title="密碼產生" description="【隨機產生安全的 ASCII 密碼】：減少 | 輸入 | 增加 | 刷新 | 複製 | 密碼">
    <div id="password-function">
        <div id="function-input">
            <button id="input-remove" aria-label="減少">
                <img alt="減少" src={remove.src} tabindex="0" draggable="false" />
            </button>
            <input id="input-number" aria-label="輸入" type="number" min="0" max="10000" placeholder="0" />
            <img id="input-add" alt="增加" src={add.src} tabindex="0" draggable="false" />
        </div>
        <img id="function-refresh" alt="刷新" src={refresh.src} tabindex="0" draggable="false" />
        <div id="function-copy">
            <img id="copy-password" alt="複製" src={copy.src} tabindex="0" draggable="false" />
            <p id="copy-alert">已複製</p>
        </div>
    </div>
    <textarea id="password-output" aria-label="密碼" rows="1" readonly></textarea>
</PageLayout>

<style>
    #password-function {
        align-items: center;
        display: flex;
        justify-content: space-evenly;
        margin-inline: 25%;

        #function-input {
            align-items: center;
            display: flex;
            justify-content: space-between;
            width: 160px;

            #input-number {
                background-color: #ffffff;
                border: 1px solid #c1d8c3;
                border-radius: 15px;
                font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande", "Lucida Sans", sans-serif;
                font-size: 1em;
                height: 38.44px;
                outline: none;
                padding: 0;
                text-align: center;
                width: 42.5%;

                &:focus-visible,
                &:hover {
                    border: 2px solid #c1d8c3;
                    margin: 0.431px;
                }

                &::-webkit-outer-spin-button,
                &::-webkit-inner-spin-button {
                    -webkit-appearance: none;
                }

                &[type=number] {
                    -moz-appearance: textfield;
                }
            }
        }

        button {
            background-color: unset;
            border: none;
            padding: 0;
        }

        img {
            background-color: #f2d1a8;
            border-radius: 100%;
            transition: all 100ms ease-in-out;

            &:focus-visible,
            &:hover {
                transform: scale(1.3);
            }
        }

        #function-copy {
            position: relative;
            top: 3px;

            #copy-alert {
                background-color: #6a9c89;
                border-radius: 10px;
                font-size: 0.8em;
                left: 90%;
                opacity: 0;
                padding: 2px 5px;
                position: absolute;
                text-align: center;
                text-wrap: nowrap;
                top: -100%;
                transition: opacity 0.25s;

                &.visible {
                    opacity: 1;
                }
            }
        }
    }

    #password-output {
        background-color: #ffffff;
        border: 1px solid #c1d8c3;
        border-radius: 15px;
        box-shadow: 0 0 2px 1px #c1d8c380;
        font-size: 1em;
        margin-top: 4%;
        overflow: scroll;
        padding: 6px 12px 3px;
        resize: none;
        white-space: nowrap;
        width: calc(100% - 24px);

        &:focus-visible,
        &:hover {
            box-shadow: 0 0 4px 2px #c1d8c380;
            outline: none;
        }
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const inputRemove = document.getElementById("input-remove") as HTMLButtonElement;
        const inputNumber = document.getElementById("input-number") as HTMLInputElement;
        const inputAdd = document.getElementById("input-add") as HTMLButtonElement;
        const funtionRefresh = document.getElementById("function-refresh") as HTMLButtonElement;
        const copyPassword = document.getElementById("copy-password") as HTMLButtonElement;
        const copyAlert = document.getElementById("copy-alert");
        const passwordOutput = document.getElementById("password-output") as HTMLTextAreaElement;
        let number = 0, timeout: NodeJS.Timeout, interval: number, alert: NodeJS.Timeout;

        inputNumber.addEventListener("input", () => {
            if (Number(inputNumber.value) < 0) {
                inputNumber.value = "0";
            } else if (Number(inputNumber.value) > 10000) {
                inputNumber.value = "10000";
            }
            number = Number(inputNumber.value);
            generatePassword();
        });
        
        functionInput(inputRemove, remove);
        functionInput(inputAdd, add);
        functionRefreshAndCopy(funtionRefresh, generatePassword);
        functionRefreshAndCopy(copyPassword, copy);
        
        function functionInput(object: HTMLButtonElement, func: Function) {
            object.onclick = () => func();
            object.onfocus = () => {
                object.onkeydown = () => func();
            };
            object.ontouchstart = () => {
                timeout = setTimeout(() => {
                    interval = setInterval(func, 75);
                }, 200);
            };
            object.ontouchend = () => {
                clearInterval(interval);
                clearTimeout(timeout);
            };
            object.onmouseenter = () => {
                object.onmousedown = () => {
                    timeout = setTimeout(() => {
                        interval = setInterval(func, 75);
                    }, 200);
                };
                object.onmouseup = () => {
                    clearInterval(interval);
                    clearTimeout(timeout);
                };
            };
            object.onmouseleave = () => {
                clearInterval(interval);
                clearTimeout(timeout);
            };
        }
        
        function functionRefreshAndCopy(object: HTMLButtonElement, func: Function) {
            object.onclick = () => func();
            object.onfocus = () => {
                object.onkeydown = () => generatePassword();
            };
        }

        function remove() {
            if (Number(inputNumber.value) > 0) {
                number -= 1;
            }
            inputNumber.value = String(number);
            generatePassword();
        }
        
        function add() {
            if (Number(inputNumber.value) < 10000) {
                number += 1;
            }
            inputNumber.value = String(number);
            generatePassword();
        }

        function copy() {
            navigator.clipboard.writeText(passwordOutput.value);
            copyAlert!.classList.add("visible");
            alert = setTimeout(() => {
                clearTimeout(alert);
                copyAlert!.classList.remove("visible");
            }, 1500);
        }
        
        function generatePassword() {
            passwordOutput.value = classifyLength(number);
        }
        
        function classifyLength(length: number) {
            if (length < 95) {
                return generateRandom(length);
            } else {
                let integer = "";
                for (let i = 0; i < Math.trunc(length / 95); i++) {
                    integer += generateRandom(95);
                } 
                return integer + generateRandom(length % 95);
            }
        }

        function generateRandom(sliceEnd: number) {
            return Array
              .from(" !\"'#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~")
              .sort(() => 0.5 - Math.random())
              .slice(0, sliceEnd)
              .join("");
        }
    });
</script>